version: '3'

networks:
  mwg:
    driver: bridge

services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - mwg

  consul:
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - 8500:8500
      - 8600:8600/udp
    command: agent -server   -ui   -node=server-1   -bootstrap-expect=1   -client='0.0.0.0'
    depends_on:
      - zookeeper
    networks:
      - mwg

  db:
    image: mysql:latest
    container_name: db
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mvdb
    depends_on:
      - zookeeper
    volumes:
      - ./schema/schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mwg

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    networks:
      - mwg

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./configs:/etc/prometheus
    networks:
      - mwg

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./configs:/etc/prometheus
    depends_on:
      - prometheus
    networks:
      - mwg

  movie:
    # image: movie:latest
    build: ./movie
    container_name: movie
    restart: on-failure
    ports:
      - 8083:8083
    volumes:
      - ./movie/configs/docker-defaults.yaml:/app/defaults.yaml
      - ./movie/configs/cert.crt:/app/cert.crt
      - ./movie/configs/cert.key:/app/cert.key
    depends_on:
      - rating
      - metadata
      - jaeger
      - prometheus
    networks:
      - mwg

  rating:
    # image: rating:latest
    build: ./rating
    container_name: rating
    restart: on-failure
    ports:
      - 8082:8082
    volumes:
      - ./rating/configs/docker-defaults.yaml:/app/defaults.yaml
      - ./rating/configs/cert.crt:/app/cert.crt
      - ./rating/configs/cert.key:/app/cert.key
    depends_on:
      - kafka
      - db
      - auth
      - jaeger
      - prometheus
    networks:
      - mwg

  metadata:
    # image: metadata:latest
    build: ./metadata
    container_name: metadata
    restart: on-failure
    ports:
      - 8081:8081
    volumes:
      - ./metadata/configs/docker-defaults.yaml:/app/defaults.yaml
      - ./metadata/configs/cert.crt:/app/cert.crt
      - ./metadata/configs/cert.key:/app/cert.key
    depends_on:
      - db
      - jaeger
      - prometheus
    networks:
      - mwg

  auth:
    # image: auth:latest
    build: ./auth
    container_name: auth
    restart: on-failure
    ports:
      - 8084:8084
    volumes:
      - ./auth/configs/docker-defaults.yaml:/app/defaults.yaml
      - ./auth/configs/cert.crt:/app/cert.crt
      - ./auth/configs/cert.key:/app/cert.key
    depends_on:
      - db
      - jaeger
      - prometheus
    networks:
      - mwg
